import pygame, sys

pygame.init()
# задаем размер экрана, заголовок и задний фон
SCREEN = pygame.display.set_mode((1280, 720))
pygame.display.set_caption('Menu')
BG = pygame.image.load('BG.jpg')
first_level_bg = pygame.image.load('first.jpg')
white = (255, 255, 255)

class Player(pygame.sprite.Sprite):
    def __init__(self, x, y, img='din.png'):
        super().__init__()

        self.image = pygame.image.load(img).convert_alpha()
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y

        self.change_x = 0
        self.change_y = 0
        self.walls = None

    def update(self):
        self.rect.x += self.change_x
        bloock_hit_list = pygame.sprite.spritecollide(self, self.walls, False)
        for block in bloock_hit_list:
            if self.change_x > 0:
                self.rect.right = block.rect.left
            else:
                self.rect.left = block.rect.right

        self.rect.y += self.change_y
        bloock_hit_list = pygame.sprite.spritecollide()
        for block in bloock_hit_list:
            if self.change_y > 0:
                self.rect.bottom = block.rect.top
            else:
                self.rect.top = block.rect.bottom

class Wall(pygame.sprite.Sprite):
    def __init__(self, x, y, weight, height):
        super().__init__()

        self.image = pygame.Surface([weight, height])
        self.image.fill(white)

        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.y = y

# используем файл, в котором записаны нужные нам цвета и шрифты
def get_font(size):
    return pygame.font.Font("font.ttf", size)

# класс, отвечающий за кнопки
class Button:
    def __init__(self, image, pos, text_input, font, base_color, hovering_color):
        self.image = image
        self.x_pos = pos[0]
        self.y_pos = pos[1]
        self.font = font
        self.base_color = base_color
        self.hovering_color = hovering_color
        self.text_input = text_input
        self.text = self.font.render(self.text_input, True, self.base_color)
        if self.image is None:
            self.image = self.text
        self.rect = self.image.get_rect(center=(self.x_pos, self.y_pos))
        self.text_rect = self.text.get_rect(center=(self.x_pos, self.y_pos))

    def update(self, screen):
        if self.image is not None:
            screen.blit(self.image, self.rect)
        screen.blit(self.text, self.text_rect)

    def check_for_input(self, position):
        if position[0] in range(self.rect.left, self.rect.right) and position[1] in range(self.rect.top, self.rect.bottom):
            return True
        return False

    def change_color(self, position):
        if position[0] in range(self.rect.left, self.rect.right) and position[1] in range(self.rect.top, self.rect.bottom):
            self.text = self.font.render(self.text_input, True, self.hovering_color)
        else:
            self.text = self.font.render(self.text_input, True, self.base_color)

# экран, где пользователь выбирает уровень
def play():
    pygame.display.set_caption('Play')

    while True:
        SCREEN.fill('black')

        # задаем новый заголовок
        play_mouse_pos = pygame.mouse.get_pos()
        play_text = get_font(100).render('CHOOSE LEVEL', True, '#b68f40')
        play_rect = play_text.get_rect(center=(640, 100))

        # создаем новые кнопки
        first_button = Button(image=pygame.image.load('rect.png'), pos=(640, 340),
                             text_input='FIRST LEVEL', font=get_font(40), base_color='#d7fcd4', hovering_color='White')
        second_button = Button(image=pygame.image.load('rect.png'), pos=(640, 540),
                              text_input='SECOND LEVEL', font=get_font(40), base_color='#d7fcd4', hovering_color='White')

        SCREEN.blit(play_text, play_rect)
        for button in [first_button, second_button]:
            button.change_color(play_mouse_pos)
            button.update(SCREEN)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if first_button.check_for_input(play_mouse_pos):
                    first_level()
                elif second_button.check_for_input(play_mouse_pos):
                    second_level()

        pygame.display.update()

def first_level():
    pygame.display.set_caption('First level')

    while True:
        SCREEN.blit(first_level_bg, (0,0))
        wall_list = pygame.sprite.Group()
        all_sprites = pygame.sprite.Group()

        wall_coord = [
            [0, 0, 10, 720],
            [10, 0, 1270, 10],
            [1270, 10, 10, 710],
            [10, 710, 1270, 10],
            [10, 110, 768, 10],
            [878, 10, 10, 240],
            [248, 250, 640, 10],
            [110, 220, 10, 350],
            [10, 570, 110, 10],
            [238, 250, 10, 350],
            [420, 360, 10, 350],
            [430, 360, 530, 10],
            [520, 460, 10, 250],
            [530, 460, 530, 10],
            [1050, 92, 10, 378],
            [1200, 92, 10, 478],
            [770, 570, 500, 10]
        ]
        for coord in wall_coord:
            wall = Wall(coord[0], coord[1], coord[2], coord[3])
            wall_list.add(wall)
            all_sprites.add(wall)

        player = Player(100, 100)
        player.walls = wall_list
        all_sprites.add(player)
        all_sprites.draw(SCREEN)


        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        pygame.display.update()

def second_level():
    pygame.display.set_caption('Second level')

    while True:
        SCREEN.fill('black')

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        pygame.display.update()

# лавное меню, при нажатии единственной кнопки "Play" появляется "новый" экран (старый заполняется черным цветом, появляются новые кнопки)
def main_menu():
    pygame.display.set_caption('Menu')

    while True:
        SCREEN.blit(BG, (0, 0))

        menu_mouse_pos = pygame.mouse.get_pos()
        menu_text = get_font(100).render('MAIN MENU', True, '#b68f40')
        menu_rect = menu_text.get_rect(center=(640, 100))

        play_button = Button(image=pygame.image.load('rect.png'), pos=(640, 340),
                             text_input='PLAY', font=get_font(75), base_color='#d7fcd4', hovering_color='White')
        SCREEN.blit(menu_text, menu_rect)

        for button in [play_button]:
            button.change_color(menu_mouse_pos)
            button.update(SCREEN)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if play_button.check_for_input(menu_mouse_pos):
                    play()

        pygame.display.update()

main_menu()
